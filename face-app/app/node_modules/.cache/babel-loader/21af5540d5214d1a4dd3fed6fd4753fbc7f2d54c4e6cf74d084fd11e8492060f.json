{"ast":null,"code":"var _jsxFileName = \"C:\\\\SMARTDATA2\\\\resto-pos\\\\face-app\\\\app\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport * as faceapi from 'face-api.js';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  closeModal\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [initializing, setInitializing] = useState(true);\n  const [scanning, setScanning] = useState(false);\n  const [message, setMessage] = useState('Initializing...');\n  const [error, setError] = useState('Blink twice to login...');\n  const [loginSuccess, setLoginSuccess] = useState(false);\n  const videoHeight = 480;\n  const videoWidth = 640;\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + '/models';\n      setInitializing(true);\n      await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)]).then(startVideo);\n      console.log(\"Face models loaded\");\n    };\n    loadModels();\n  }, []);\n  const startVideo = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n    }).catch(err => console.error(\"Error accessing webcam:\", err));\n  };\n  const handleVideoOnPlay = () => {\n    setInterval(async () => {\n      if (initializing) {\n        setInitializing(false);\n        setMessage(\"Ready to Scan\");\n        setScanning(true);\n      }\n      canvasRef.current.innerHTML = faceapi.createCanvasFromMedia(videoRef.current);\n      const displaySize = {\n        width: videoWidth,\n        height: videoHeight\n      };\n      faceapi.matchDimensions(canvasRef.current, displaySize);\n      const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n      canvasRef.current.getContext('2d').clearRect(0, 0, videoWidth, videoHeight);\n      faceapi.draw.drawDetections(canvasRef.current, detections);\n      faceapi.draw.drawFaceLandmarks(canvasRef.current, detections);\n      faceapi.draw.drawFaceExpressions(canvasRef.current, detections);\n    }, 100);\n  };\n  const detectTexture = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.drawImage(videoRef.current, 0, 0, videoWidth, videoHeight);\n    const imageData = ctx.getImageData(0, 0, videoWidth, videoHeight);\n    const pixels = imageData.data;\n    let laplacianSum = 0;\n    let totalPixels = pixels.length / 4; // RGBA format\n\n    for (let i = 0; i < pixels.length - 4; i += 4) {\n      let gray = 0.299 * pixels[i] + 0.587 * pixels[i + 1] + 0.114 * pixels[i + 2];\n      let nextGray = 0.299 * pixels[i + 4] + 0.587 * pixels[i + 5] + 0.114 * pixels[i + 6];\n      laplacianSum += Math.pow(gray - nextGray, 2);\n    }\n    let variance = laplacianSum / totalPixels;\n    console.log(\"Texture Variance:\", variance);\n    return variance < 100; // Threshold for detecting real texture\n  };\n  const checkLiveness = async () => {\n    let initialDetection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n    if (!initialDetection) {\n      setError(\"No face detected! Please try again.\");\n      return false;\n    }\n    const initialX = initialDetection.landmarks._positions[0].x;\n    setError(\"Please turn your head slightly to the right.\");\n    let secondDetection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n    if (!secondDetection) {\n      setError(\"Face lost! Please stay in frame.\");\n      return false;\n    }\n    const secondX = secondDetection.landmarks._positions[0].x;\n    if (Math.abs(secondX - initialX) < 10) {\n      // Require a significant horizontal movement\n      setError(\"Liveness test failed! Please turn your head.\");\n      return false;\n    }\n    return true; // Passed liveness check\n  };\n  const detectBlinking = async () => {\n    const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();\n    if (!detection) return false; // No face detected\n\n    const landmarks = detection.landmarks;\n    const leftEye = landmarks.getLeftEye();\n    const rightEye = landmarks.getRightEye();\n    const eyeAspectRatio = eye => {\n      const vertical1 = Math.hypot(eye[1].y - eye[5].y, eye[1].x - eye[5].x);\n      const vertical2 = Math.hypot(eye[2].y - eye[4].y, eye[2].x - eye[4].x);\n      const horizontal = Math.hypot(eye[0].y - eye[3].y, eye[0].x - eye[3].x);\n      return (vertical1 + vertical2) / (2.0 * horizontal);\n    };\n    const leftEAR = eyeAspectRatio(leftEye);\n    const rightEAR = eyeAspectRatio(rightEye);\n    const ear = (leftEAR + rightEAR) / 2.0;\n\n    // EAR threshold for blinking\n    const EAR_THRESHOLD = 0.28;\n    console.log(`Left EAR: ${leftEAR}, Right EAR: ${rightEAR}, Average EAR: ${ear}`);\n    return ear < EAR_THRESHOLD; // If EAR is low, the user blinked\n  };\n  const checkBlinkLiveness = async () => {\n    let blinkCount = 0;\n    const REQUIRED_BLINKS = 2; // Number of blinks required to pass the liveness test\n    const MAX_ATTEMPTS = 20; // Maximum number of attempts to detect blinks\n    const DELAY_BETWEEN_CHECKS = 200; // Delay between each check in milliseconds\n\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\n      if (await detectBlinking()) {\n        blinkCount++;\n        if (blinkCount >= REQUIRED_BLINKS) {\n          return true; // User blinked enough times -> real human\n        }\n      }\n      await new Promise(resolve => setTimeout(resolve, DELAY_BETWEEN_CHECKS)); // Wait before checking again\n    }\n\n    //        setError(\"Liveness test failed! Please blink to prove you are real.\");\n    //        await new Promise(resolve => setTimeout(resolve, 1500));\n    return false;\n  };\n  const handleLogin = async () => {\n    while (!loginSuccess) {\n      console.log(\"calling handleLogin...\");\n      if (!detectTexture()) {\n        console.log(\"Spoofing detected! Possible screen replay attack.\");\n        setError(\"Spoofing detected! Please use a real face.\");\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        continue;\n      }\n      if (!(await checkBlinkLiveness())) {\n        console.log(\"Liveness check failed. Retrying...\");\n        setError(\"Liveness test failed! Please blink to prove you are real.\");\n        await new Promise(resolve => setTimeout(resolve, 2000)); // Wait before retrying\n        continue; // Skip the rest of the loop and retry\n      }\n      const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions().withFaceDescriptor();\n      if (detection) {\n        const facialFeatures = Array.from(detection.descriptor);\n        console.log(\"Facial features:\", facialFeatures);\n        try {\n          const response = await axios.post('http://localhost:8080/api/login', {\n            facialFeatures\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          console.log(\"Login successful:\", response.data);\n          setError(\"Login successful!\" + response.data);\n          setLoginSuccess(true);\n          setTimeout(() => setScanning(false), 2000); // Small delay to force re-render            \n          alert(\"Login successful!\" + response.data);\n          return;\n        } catch (error) {\n          console.error(\"Login failed:\", error);\n          setError(\"Invalid credentials. Please try again.\");\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n      } else {\n        console.error(\"No face detected\");\n        setError(\"No face detected, please try again.\");\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      }\n    }\n  };\n  useEffect(() => {\n    if (!initializing && scanning && !loginSuccess) {\n      handleLogin(); // Run login automatically once models are loaded\n    }\n  }, [initializing, scanning]); // Runs whenever `initializing` changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display-flex justify-content-center position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            muted: true,\n            height: videoHeight,\n            width: videoWidth,\n            onPlay: handleVideoOnPlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"position-absolute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this), !initializing && !loginSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scanning-overlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        disabled: initializing,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"bSpSJOghQSP6RavPz87FP21VUY8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","faceapi","jsxDEV","_jsxDEV","Login","closeModal","_s","username","setUsername","initializing","setInitializing","scanning","setScanning","message","setMessage","error","setError","loginSuccess","setLoginSuccess","videoHeight","videoWidth","videoRef","canvasRef","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","startVideo","console","log","navigator","mediaDevices","getUserMedia","video","stream","current","srcObject","catch","err","handleVideoOnPlay","setInterval","innerHTML","createCanvasFromMedia","displaySize","width","height","matchDimensions","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","getContext","clearRect","draw","drawDetections","drawFaceLandmarks","drawFaceExpressions","detectTexture","ctx","drawImage","imageData","getImageData","pixels","data","laplacianSum","totalPixels","length","i","gray","nextGray","Math","pow","variance","checkLiveness","initialDetection","detectSingleFace","withFaceDescriptor","initialX","landmarks","_positions","x","secondDetection","secondX","abs","detectBlinking","detection","leftEye","getLeftEye","rightEye","getRightEye","eyeAspectRatio","eye","vertical1","hypot","y","vertical2","horizontal","leftEAR","rightEAR","ear","EAR_THRESHOLD","checkBlinkLiveness","blinkCount","REQUIRED_BLINKS","MAX_ATTEMPTS","DELAY_BETWEEN_CHECKS","resolve","setTimeout","handleLogin","facialFeatures","Array","from","descriptor","response","post","headers","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","onPlay","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/SMARTDATA2/resto-pos/face-app/app/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport * as faceapi from 'face-api.js';\r\nimport './Login.css';\r\n\r\nconst Login = ({ closeModal }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [initializing, setInitializing] = useState(true);\r\n    const [scanning, setScanning] = useState(false);\r\n    const [message, setMessage] = useState('Initializing...');\r\n    const [error, setError] = useState('Blink twice to login...');\r\n    const [loginSuccess, setLoginSuccess] = useState(false);\r\n    const videoHeight = 480;\r\n    const videoWidth = 640;\r\n    \r\n    const videoRef = useRef();\r\n    const canvasRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const loadModels = async () => {\r\n            const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n    \r\n            setInitializing(true);\r\n            await Promise.all([\r\n                faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n                faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n                faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n                faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)\r\n            ]).then (startVideo);\r\n            console.log(\"Face models loaded\");\r\n        };\r\n        loadModels();    \r\n    }, []);\r\n\r\n    const startVideo = () => {\r\n        navigator.mediaDevices.getUserMedia({ video: true })\r\n            .then((stream) => {\r\n                videoRef.current.srcObject = stream;\r\n            })\r\n            .catch((err) => console.error(\"Error accessing webcam:\", err));\r\n    };\r\n\r\n    const handleVideoOnPlay = () => {\r\n        setInterval(async () => {\r\n            if (initializing) {\r\n                setInitializing(false);\r\n                setMessage(\"Ready to Scan\")\r\n                setScanning(true);\r\n            }\r\n            canvasRef.current.innerHTML = faceapi.createCanvasFromMedia(videoRef.current);\r\n            const displaySize = { width: videoWidth, height: videoHeight };\r\n            faceapi.matchDimensions(canvasRef.current, displaySize);\r\n            const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n                .withFaceLandmarks()\r\n                .withFaceExpressions();\r\n            canvasRef.current.getContext('2d').clearRect(0, 0, videoWidth, videoHeight);\r\n            faceapi.draw.drawDetections(canvasRef.current, detections);\r\n            faceapi.draw.drawFaceLandmarks(canvasRef.current, detections);\r\n            faceapi.draw.drawFaceExpressions(canvasRef.current, detections);\r\n\r\n        }, 100);\r\n    };\r\n\r\n    const detectTexture = () => {\r\n        const ctx = canvasRef.current.getContext('2d');\r\n        ctx.drawImage(videoRef.current, 0, 0, videoWidth, videoHeight);\r\n        const imageData = ctx.getImageData(0, 0, videoWidth, videoHeight);\r\n        const pixels = imageData.data;\r\n    \r\n        let laplacianSum = 0;\r\n        let totalPixels = pixels.length / 4; // RGBA format\r\n    \r\n        for (let i = 0; i < pixels.length - 4; i += 4) {\r\n            let gray = 0.299 * pixels[i] + 0.587 * pixels[i + 1] + 0.114 * pixels[i + 2];\r\n            let nextGray = 0.299 * pixels[i + 4] + 0.587 * pixels[i + 5] + 0.114 * pixels[i + 6];\r\n            laplacianSum += Math.pow(gray - nextGray, 2);\r\n        }\r\n    \r\n        let variance = laplacianSum / totalPixels;\r\n        console.log(\"Texture Variance:\", variance);\r\n    \r\n        return variance < 100; // Threshold for detecting real texture\r\n    };\r\n\r\n    const checkLiveness = async () => {\r\n        let initialDetection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptor();\r\n    \r\n        if (!initialDetection) {\r\n            setError(\"No face detected! Please try again.\");\r\n            return false;\r\n        }\r\n    \r\n        const initialX = initialDetection.landmarks._positions[0].x;\r\n    \r\n        setError(\"Please turn your head slightly to the right.\");\r\n    \r\n        let secondDetection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptor();\r\n    \r\n        if (!secondDetection) {\r\n            setError(\"Face lost! Please stay in frame.\");\r\n            return false;\r\n        }\r\n    \r\n        const secondX = secondDetection.landmarks._positions[0].x;\r\n    \r\n        if (Math.abs(secondX - initialX) < 10) { // Require a significant horizontal movement\r\n            setError(\"Liveness test failed! Please turn your head.\");\r\n            return false;\r\n        }\r\n    \r\n        return true; // Passed liveness check\r\n    };\r\n\r\n    const detectBlinking = async () => {\r\n        const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptor();\r\n    \r\n        if (!detection) return false; // No face detected\r\n    \r\n        const landmarks = detection.landmarks;\r\n        const leftEye = landmarks.getLeftEye();\r\n        const rightEye = landmarks.getRightEye();\r\n    \r\n        const eyeAspectRatio = (eye) => {\r\n            const vertical1 = Math.hypot(eye[1].y - eye[5].y, eye[1].x - eye[5].x);\r\n            const vertical2 = Math.hypot(eye[2].y - eye[4].y, eye[2].x - eye[4].x);\r\n            const horizontal = Math.hypot(eye[0].y - eye[3].y, eye[0].x - eye[3].x);\r\n            return (vertical1 + vertical2) / (2.0 * horizontal);\r\n        };\r\n    \r\n        const leftEAR = eyeAspectRatio(leftEye);\r\n        const rightEAR = eyeAspectRatio(rightEye);\r\n        const ear = (leftEAR + rightEAR) / 2.0;\r\n    \r\n        // EAR threshold for blinking\r\n        const EAR_THRESHOLD = 0.28;\r\n\r\n        console.log(`Left EAR: ${leftEAR}, Right EAR: ${rightEAR}, Average EAR: ${ear}`);\r\n\r\n        return ear < EAR_THRESHOLD; // If EAR is low, the user blinked\r\n    };\r\n    \r\n    const checkBlinkLiveness = async () => {\r\n        let blinkCount = 0;\r\n        const REQUIRED_BLINKS = 2; // Number of blinks required to pass the liveness test\r\n        const MAX_ATTEMPTS = 20; // Maximum number of attempts to detect blinks\r\n        const DELAY_BETWEEN_CHECKS = 200; // Delay between each check in milliseconds\r\n    \r\n        for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n            if (await detectBlinking()) {\r\n                blinkCount++;\r\n                if (blinkCount >= REQUIRED_BLINKS) {\r\n                    return true; // User blinked enough times -> real human\r\n                }\r\n            }\r\n            await new Promise(resolve => setTimeout(resolve, DELAY_BETWEEN_CHECKS)); // Wait before checking again\r\n        }\r\n    \r\n//        setError(\"Liveness test failed! Please blink to prove you are real.\");\r\n//        await new Promise(resolve => setTimeout(resolve, 1500));\r\n        return false;\r\n    };        \r\n\r\n    const handleLogin = async () => {\r\n\r\n        while (!loginSuccess) {\r\n            console.log(\"calling handleLogin...\");\r\n\r\n            if (!detectTexture()) {\r\n                console.log(\"Spoofing detected! Possible screen replay attack.\");\r\n                setError(\"Spoofing detected! Please use a real face.\");\r\n                await new Promise(resolve => setTimeout(resolve, 2000));\r\n                continue;\r\n            }            \r\n\r\n            if (!(await checkBlinkLiveness())) {\r\n                console.log(\"Liveness check failed. Retrying...\");\r\n                setError(\"Liveness test failed! Please blink to prove you are real.\");\r\n                await new Promise(resolve => setTimeout(resolve, 2000)); // Wait before retrying\r\n                continue; // Skip the rest of the loop and retry\r\n            }\r\n\r\n            const detection = await faceapi.detectSingleFace(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n                .withFaceLandmarks()\r\n                .withFaceExpressions()\r\n                .withFaceDescriptor();\r\n\r\n            if (detection) {\r\n                const facialFeatures = Array.from(detection.descriptor);\r\n\r\n                console.log(\"Facial features:\", facialFeatures);\r\n\r\n                try {\r\n                    const response = await axios.post('http://localhost:8080/api/login', {\r\n                        facialFeatures\r\n                    }, {\r\n                        headers: { 'Content-Type': 'application/json' }\r\n                    });\r\n\r\n                    console.log(\"Login successful:\", response.data);\r\n                    setError(\"Login successful!\" + response.data)\r\n                    setLoginSuccess(true);\r\n                    setTimeout(() => setScanning(false), 2000); // Small delay to force re-render            \r\n                    alert(\"Login successful!\" + response.data);\r\n                    return;\r\n                    \r\n                } catch (error) {\r\n                    console.error(\"Login failed:\", error);\r\n                    setError(\"Invalid credentials. Please try again.\");\r\n                    await new Promise(resolve => setTimeout(resolve, 2000));\r\n                    }\r\n            } else {\r\n                console.error(\"No face detected\");\r\n                setError(\"No face detected, please try again.\");\r\n                await new Promise(resolve => setTimeout(resolve, 2000));\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!initializing && scanning && !loginSuccess) {\r\n            handleLogin(); // Run login automatically once models are loaded\r\n        }\r\n    }, [initializing, scanning]); // Runs whenever `initializing` changes\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n                <h2>Login</h2>\r\n                <div className=\"video-container\">\r\n                <div className='display-flex justify-content-center position-relative'>\r\n                <video ref={videoRef} autoPlay muted height={videoHeight} width={videoWidth} onPlay={handleVideoOnPlay} />\r\n                    <canvas ref={canvasRef} className='position-absolute' />\r\n                    {!initializing && !loginSuccess && <div className=\"scanning-overlay\"></div>}\r\n                </div>\r\n                </div>\r\n                <div><span>{message}</span></div>\r\n                <div><span>{error}</span></div>\r\n                <button onClick={handleLogin} disabled={initializing}>Login</button>\r\n                <button onClick={closeModal}>Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,iBAAiB,CAAC;EACzD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,yBAAyB,CAAC;EAC7D,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMsB,WAAW,GAAG,GAAG;EACvB,MAAMC,UAAU,GAAG,GAAG;EAEtB,MAAMC,QAAQ,GAAGtB,MAAM,CAAC,CAAC;EACzB,MAAMuB,SAAS,GAAGvB,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACZ,MAAMyB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,SAAS;MAEpDjB,eAAe,CAAC,IAAI,CAAC;MACrB,MAAMkB,OAAO,CAACC,GAAG,CAAC,CACd5B,OAAO,CAAC6B,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAACR,SAAS,CAAC,EACpDvB,OAAO,CAAC6B,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAACR,SAAS,CAAC,EACrDvB,OAAO,CAAC6B,IAAI,CAACI,kBAAkB,CAACF,WAAW,CAACR,SAAS,CAAC,EACtDvB,OAAO,CAAC6B,IAAI,CAACK,iBAAiB,CAACH,WAAW,CAACR,SAAS,CAAC,CACxD,CAAC,CAACY,IAAI,CAAEC,UAAU,CAAC;MACpBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC,CAAC;IACDhB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACrBG,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAC/CP,IAAI,CAAEQ,MAAM,IAAK;MACdvB,QAAQ,CAACwB,OAAO,CAACC,SAAS,GAAGF,MAAM;IACvC,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKV,OAAO,CAACvB,KAAK,CAAC,yBAAyB,EAAEiC,GAAG,CAAC,CAAC;EACtE,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BC,WAAW,CAAC,YAAY;MACpB,IAAIzC,YAAY,EAAE;QACdC,eAAe,CAAC,KAAK,CAAC;QACtBI,UAAU,CAAC,eAAe,CAAC;QAC3BF,WAAW,CAAC,IAAI,CAAC;MACrB;MACAU,SAAS,CAACuB,OAAO,CAACM,SAAS,GAAGlD,OAAO,CAACmD,qBAAqB,CAAC/B,QAAQ,CAACwB,OAAO,CAAC;MAC7E,MAAMQ,WAAW,GAAG;QAAEC,KAAK,EAAElC,UAAU;QAAEmC,MAAM,EAAEpC;MAAY,CAAC;MAC9DlB,OAAO,CAACuD,eAAe,CAAClC,SAAS,CAACuB,OAAO,EAAEQ,WAAW,CAAC;MACvD,MAAMI,UAAU,GAAG,MAAMxD,OAAO,CAACyD,cAAc,CAACrC,QAAQ,CAACwB,OAAO,EAAE,IAAI5C,OAAO,CAAC0D,uBAAuB,CAAC,CAAC,CAAC,CACnGC,iBAAiB,CAAC,CAAC,CACnBC,mBAAmB,CAAC,CAAC;MAC1BvC,SAAS,CAACuB,OAAO,CAACiB,UAAU,CAAC,IAAI,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE3C,UAAU,EAAED,WAAW,CAAC;MAC3ElB,OAAO,CAAC+D,IAAI,CAACC,cAAc,CAAC3C,SAAS,CAACuB,OAAO,EAAEY,UAAU,CAAC;MAC1DxD,OAAO,CAAC+D,IAAI,CAACE,iBAAiB,CAAC5C,SAAS,CAACuB,OAAO,EAAEY,UAAU,CAAC;MAC7DxD,OAAO,CAAC+D,IAAI,CAACG,mBAAmB,CAAC7C,SAAS,CAACuB,OAAO,EAAEY,UAAU,CAAC;IAEnE,CAAC,EAAE,GAAG,CAAC;EACX,CAAC;EAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG/C,SAAS,CAACuB,OAAO,CAACiB,UAAU,CAAC,IAAI,CAAC;IAC9CO,GAAG,CAACC,SAAS,CAACjD,QAAQ,CAACwB,OAAO,EAAE,CAAC,EAAE,CAAC,EAAEzB,UAAU,EAAED,WAAW,CAAC;IAC9D,MAAMoD,SAAS,GAAGF,GAAG,CAACG,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEpD,UAAU,EAAED,WAAW,CAAC;IACjE,MAAMsD,MAAM,GAAGF,SAAS,CAACG,IAAI;IAE7B,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,WAAW,GAAGH,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC;;IAErC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACI,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAI,CAAC,EAAE;MAC3C,IAAIC,IAAI,GAAG,KAAK,GAAGN,MAAM,CAACK,CAAC,CAAC,GAAG,KAAK,GAAGL,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAGL,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC;MAC5E,IAAIE,QAAQ,GAAG,KAAK,GAAGP,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAGL,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAGL,MAAM,CAACK,CAAC,GAAG,CAAC,CAAC;MACpFH,YAAY,IAAIM,IAAI,CAACC,GAAG,CAACH,IAAI,GAAGC,QAAQ,EAAE,CAAC,CAAC;IAChD;IAEA,IAAIG,QAAQ,GAAGR,YAAY,GAAGC,WAAW;IACzCtC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE4C,QAAQ,CAAC;IAE1C,OAAOA,QAAQ,GAAG,GAAG,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIC,gBAAgB,GAAG,MAAMpF,OAAO,CAACqF,gBAAgB,CAACjE,QAAQ,CAACwB,OAAO,EAAE,IAAI5C,OAAO,CAAC0D,uBAAuB,CAAC,CAAC,CAAC,CACzGC,iBAAiB,CAAC,CAAC,CACnB2B,kBAAkB,CAAC,CAAC;IAEzB,IAAI,CAACF,gBAAgB,EAAE;MACnBrE,QAAQ,CAAC,qCAAqC,CAAC;MAC/C,OAAO,KAAK;IAChB;IAEA,MAAMwE,QAAQ,GAAGH,gBAAgB,CAACI,SAAS,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,CAAC;IAE3D3E,QAAQ,CAAC,8CAA8C,CAAC;IAExD,IAAI4E,eAAe,GAAG,MAAM3F,OAAO,CAACqF,gBAAgB,CAACjE,QAAQ,CAACwB,OAAO,EAAE,IAAI5C,OAAO,CAAC0D,uBAAuB,CAAC,CAAC,CAAC,CACxGC,iBAAiB,CAAC,CAAC,CACnB2B,kBAAkB,CAAC,CAAC;IAEzB,IAAI,CAACK,eAAe,EAAE;MAClB5E,QAAQ,CAAC,kCAAkC,CAAC;MAC5C,OAAO,KAAK;IAChB;IAEA,MAAM6E,OAAO,GAAGD,eAAe,CAACH,SAAS,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,CAAC;IAEzD,IAAIV,IAAI,CAACa,GAAG,CAACD,OAAO,GAAGL,QAAQ,CAAC,GAAG,EAAE,EAAE;MAAE;MACrCxE,QAAQ,CAAC,8CAA8C,CAAC;MACxD,OAAO,KAAK;IAChB;IAEA,OAAO,IAAI,CAAC,CAAC;EACjB,CAAC;EAED,MAAM+E,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,SAAS,GAAG,MAAM/F,OAAO,CAACqF,gBAAgB,CAACjE,QAAQ,CAACwB,OAAO,EAAE,IAAI5C,OAAO,CAAC0D,uBAAuB,CAAC,CAAC,CAAC,CACpGC,iBAAiB,CAAC,CAAC,CACnB2B,kBAAkB,CAAC,CAAC;IAEzB,IAAI,CAACS,SAAS,EAAE,OAAO,KAAK,CAAC,CAAC;;IAE9B,MAAMP,SAAS,GAAGO,SAAS,CAACP,SAAS;IACrC,MAAMQ,OAAO,GAAGR,SAAS,CAACS,UAAU,CAAC,CAAC;IACtC,MAAMC,QAAQ,GAAGV,SAAS,CAACW,WAAW,CAAC,CAAC;IAExC,MAAMC,cAAc,GAAIC,GAAG,IAAK;MAC5B,MAAMC,SAAS,GAAGtB,IAAI,CAACuB,KAAK,CAACF,GAAG,CAAC,CAAC,CAAC,CAACG,CAAC,GAAGH,GAAG,CAAC,CAAC,CAAC,CAACG,CAAC,EAAEH,GAAG,CAAC,CAAC,CAAC,CAACX,CAAC,GAAGW,GAAG,CAAC,CAAC,CAAC,CAACX,CAAC,CAAC;MACtE,MAAMe,SAAS,GAAGzB,IAAI,CAACuB,KAAK,CAACF,GAAG,CAAC,CAAC,CAAC,CAACG,CAAC,GAAGH,GAAG,CAAC,CAAC,CAAC,CAACG,CAAC,EAAEH,GAAG,CAAC,CAAC,CAAC,CAACX,CAAC,GAAGW,GAAG,CAAC,CAAC,CAAC,CAACX,CAAC,CAAC;MACtE,MAAMgB,UAAU,GAAG1B,IAAI,CAACuB,KAAK,CAACF,GAAG,CAAC,CAAC,CAAC,CAACG,CAAC,GAAGH,GAAG,CAAC,CAAC,CAAC,CAACG,CAAC,EAAEH,GAAG,CAAC,CAAC,CAAC,CAACX,CAAC,GAAGW,GAAG,CAAC,CAAC,CAAC,CAACX,CAAC,CAAC;MACvE,OAAO,CAACY,SAAS,GAAGG,SAAS,KAAK,GAAG,GAAGC,UAAU,CAAC;IACvD,CAAC;IAED,MAAMC,OAAO,GAAGP,cAAc,CAACJ,OAAO,CAAC;IACvC,MAAMY,QAAQ,GAAGR,cAAc,CAACF,QAAQ,CAAC;IACzC,MAAMW,GAAG,GAAG,CAACF,OAAO,GAAGC,QAAQ,IAAI,GAAG;;IAEtC;IACA,MAAME,aAAa,GAAG,IAAI;IAE1BzE,OAAO,CAACC,GAAG,CAAC,aAAaqE,OAAO,gBAAgBC,QAAQ,kBAAkBC,GAAG,EAAE,CAAC;IAEhF,OAAOA,GAAG,GAAGC,aAAa,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIC,UAAU,GAAG,CAAC;IAClB,MAAMC,eAAe,GAAG,CAAC,CAAC,CAAC;IAC3B,MAAMC,YAAY,GAAG,EAAE,CAAC,CAAC;IACzB,MAAMC,oBAAoB,GAAG,GAAG,CAAC,CAAC;;IAElC,KAAK,IAAItC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqC,YAAY,EAAErC,CAAC,EAAE,EAAE;MACnC,IAAI,MAAMiB,cAAc,CAAC,CAAC,EAAE;QACxBkB,UAAU,EAAE;QACZ,IAAIA,UAAU,IAAIC,eAAe,EAAE;UAC/B,OAAO,IAAI,CAAC,CAAC;QACjB;MACJ;MACA,MAAM,IAAItF,OAAO,CAACyF,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAED,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAC7E;;IAER;IACA;IACQ,OAAO,KAAK;EAChB,CAAC;EAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE5B,OAAO,CAACtG,YAAY,EAAE;MAClBqB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MAErC,IAAI,CAAC6B,aAAa,CAAC,CAAC,EAAE;QAClB9B,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;QAChEvB,QAAQ,CAAC,4CAA4C,CAAC;QACtD,MAAM,IAAIY,OAAO,CAACyF,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QACvD;MACJ;MAEA,IAAI,EAAE,MAAML,kBAAkB,CAAC,CAAC,CAAC,EAAE;QAC/B1E,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjDvB,QAAQ,CAAC,2DAA2D,CAAC;QACrE,MAAM,IAAIY,OAAO,CAACyF,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACzD,SAAS,CAAC;MACd;MAEA,MAAMrB,SAAS,GAAG,MAAM/F,OAAO,CAACqF,gBAAgB,CAACjE,QAAQ,CAACwB,OAAO,EAAE,IAAI5C,OAAO,CAAC0D,uBAAuB,CAAC,CAAC,CAAC,CACpGC,iBAAiB,CAAC,CAAC,CACnBC,mBAAmB,CAAC,CAAC,CACrB0B,kBAAkB,CAAC,CAAC;MAEzB,IAAIS,SAAS,EAAE;QACX,MAAMwB,cAAc,GAAGC,KAAK,CAACC,IAAI,CAAC1B,SAAS,CAAC2B,UAAU,CAAC;QAEvDrF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEiF,cAAc,CAAC;QAE/C,IAAI;UACA,MAAMI,QAAQ,GAAG,MAAM5H,KAAK,CAAC6H,IAAI,CAAC,iCAAiC,EAAE;YACjEL;UACJ,CAAC,EAAE;YACCM,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB;UAClD,CAAC,CAAC;UAEFxF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEqF,QAAQ,CAAClD,IAAI,CAAC;UAC/C1D,QAAQ,CAAC,mBAAmB,GAAG4G,QAAQ,CAAClD,IAAI,CAAC;UAC7CxD,eAAe,CAAC,IAAI,CAAC;UACrBoG,UAAU,CAAC,MAAM1G,WAAW,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;UAC5CmH,KAAK,CAAC,mBAAmB,GAAGH,QAAQ,CAAClD,IAAI,CAAC;UAC1C;QAEJ,CAAC,CAAC,OAAO3D,KAAK,EAAE;UACZuB,OAAO,CAACvB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;UACrCC,QAAQ,CAAC,wCAAwC,CAAC;UAClD,MAAM,IAAIY,OAAO,CAACyF,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QACvD;MACR,CAAC,MAAM;QACH/E,OAAO,CAACvB,KAAK,CAAC,kBAAkB,CAAC;QACjCC,QAAQ,CAAC,qCAAqC,CAAC;QAC/C,MAAM,IAAIY,OAAO,CAACyF,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MAC3D;IACJ;EACJ,CAAC;EAEDvH,SAAS,CAAC,MAAM;IACZ,IAAI,CAACW,YAAY,IAAIE,QAAQ,IAAI,CAACM,YAAY,EAAE;MAC5CsG,WAAW,CAAC,CAAC,CAAC,CAAC;IACnB;EACJ,CAAC,EAAE,CAAC9G,YAAY,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE9B,oBACIR,OAAA;IAAK6H,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1B9H,OAAA;MAAK6H,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1B9H,OAAA;QAAA8H,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdlI,OAAA;QAAK6H,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAChC9H,OAAA;UAAK6H,SAAS,EAAC,uDAAuD;UAAAC,QAAA,gBACtE9H,OAAA;YAAOmI,GAAG,EAAEjH,QAAS;YAACkH,QAAQ;YAACC,KAAK;YAACjF,MAAM,EAAEpC,WAAY;YAACmC,KAAK,EAAElC,UAAW;YAACqH,MAAM,EAAExF;UAAkB;YAAAiF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtGlI,OAAA;YAAQmI,GAAG,EAAEhH,SAAU;YAAC0G,SAAS,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACvD,CAAC5H,YAAY,IAAI,CAACQ,YAAY,iBAAId,OAAA;YAAK6H,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNlI,OAAA;QAAA8H,QAAA,eAAK9H,OAAA;UAAA8H,QAAA,EAAOpH;QAAO;UAAAqH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjClI,OAAA;QAAA8H,QAAA,eAAK9H,OAAA;UAAA8H,QAAA,EAAOlH;QAAK;UAAAmH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/BlI,OAAA;QAAQuI,OAAO,EAAEnB,WAAY;QAACoB,QAAQ,EAAElI,YAAa;QAAAwH,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpElI,OAAA;QAAQuI,OAAO,EAAErI,UAAW;QAAA4H,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC/H,EAAA,CAnPIF,KAAK;AAAAwI,EAAA,GAALxI,KAAK;AAqPX,eAAeA,KAAK;AAAC,IAAAwI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}